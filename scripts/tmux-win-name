#!/bin/zsh
#
#TODO: use #[push-default] and #[default] here and in theme where possible to be robust (rather than stuff like fg=white)

# Determine window ID
if [ -z "$1" ]; then
    window_id=$(tmux display-message -p "#{window_id}")
else
    window_id="$1"
fi

function get() {
  tmux display-message -p -t "$window_id" "$@"
}

#TODO: make all formatting optional
#TODO: see if there are some common tools to usefully shorten a directory name, or build one
# preferred logic would shorten to the capital letters and keep a suffix, and maybe render a ... unicode char in place of shortened
#TODO: I shortened my paths now to only show dir name if inside a WP, decide if I like it


fg_default="fg=#{@thm_subtext_1}"
bg="#{?window_active,#{@thm_surface_1},#{@thm_surface_0}}"
lighter_bg="#{?window_active,#{@thm_surface_2},#{@thm_surface_1}}"

# $1 dir $2 #W name $3 curr-cmd (#W is curr-cmd if not renamed)
current_path=$(get "#{pane_current_path}")
window_name=$(get "#{window_name}")
current_command=$(get "#{pane_current_command}")
tty=$(get "#{s|/dev/||:pane_tty}")

dir_text=$(useful-dir "$current_path")
dir_color_short="$dir_text"
if nickname=$(dir-nickname "$current_path"); then
  dir_color_short="#[fg=#{@thm_lavender}]$nickname#[$fg_default]"
  dir_text="$nickname ($dir_text)"
fi
full_name="$dir_text - [$current_command]"

# Copied from keys.sh not_tmux logic
# (Temporary?) workaround for the wrapped shortcomings
function is-nvim() {
  nvim_args=($(pgrep 'nvim' | xargs ps -o tty= -o state= -o args= -p | rg "^$tty +(R|S\\S*\\+)(.*)" -m1 -o -r '${2}'))
  local res=$?
  nvim_file=${nvim_args[2]}
  return $res
}

details=0
if [[ -n $window_name ]]; then
  if [[ "$window_name" = *: ]]; then
    details=1
    window_name="${window_name[1,-2]}"
  fi
  formatted="#[fg=#{@thm_sapphire},bold,italics,bg=$lighter_bg] $window_name#[fg=$bg]\u2590#[$fg_default,nobold,italics,bg=$bg]"
else
  formatted=" "
  details=1
fi

if ((details)); then
  if is-nvim; then
    formatted+="#[fg=#{@thm_green},]\uf36f${nvim_file:+ $nvim_file}#[$fg_default,italics] $dir_color_short#[noitalics]"
  elif [[ "$current_command" =~ "zsh|bash" ]]; then
    formatted+="#[$fg_default,italics]$dir_color_short#[noitalics]"
  else
    formatted+="#[fg=#{@thm_teal},bold]$current_command#[$fg_default,italics,nobold] $dir_color_short#[noitalics]"
  fi
fi
formatted+="#{?window_zoomed_flag, #[bold]#[fg=#{E:@zoom_icon_color}]\uf00e#[nobold]#[$fg_default],}"
formatted+="#{?pane_in_mode, #[bold]#[fg=#{E:@mode_color}]#(echo #{pane_mode} | cut -c1 | tr a-z A-Z)m#[nobold]#[$fg_default],}"
formatted+="#{?pane_synchronized, #[bold]#[fg=#{E:@sync_color}]S!#[nobold]#[$fg_default],}"

tmux set-window-option -t $window_id @my_window_name_formatted "$(printf "$formatted")" # printf for unicode escape
tmux set-window-option -t $window_id @my_window_name "$full_name"
tmux set-window-option -t $window_id @my_window_index "$full_name"

echo -e "$full_name"

