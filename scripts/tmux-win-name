#!/bin/zsh

# Determine window ID
if [ -z "$1" ]; then
    window_id=$(tmux display-message -p "#{window_id}")
else
    window_id="$1"
fi

function get() {
  tmux display-message -p -t "$window_id" "$@"
}

function get-color() {
  get "#{@thm_$1}"
}

#TODO: make all formatting optional
#TODO: see if there are some common tools to usefully shorten a directory name, or build one
# preferred logic would shorten to the capital letters and keep a suffix, and maybe render a ... unicode char in place of shortened
#TODO: I shortened my paths now to only show dir name if inside a WP, decide if I like it

# $1 dir $2 #W name $3 curr-cmd (#W is curr-cmd if not renamed)
current_path=$(get "#{pane_current_path}")
window_name=$(get "#{window_name}")
current_command=$(get "#{pane_current_command}")

dir_text=$(useful-dir "$current_path")
dir_color_short="$dir_text"
if nickname=$(dir-nickname "$current_path"); then
  dir_color_short="#[fg=$(get-color mauve)]$nickname#[fg=white]"
  dir_color_short="#[fg=#{@thm_mauve}]$nickname#[fg=white]"
  dir_text="$nickname ($dir_text)"
fi
full_name="$dir_text - [$current_command]"

if [[ "$window_name" == "$current_command" || -z $window_name ]]; then
  if [[ "$current_command" == 'nvim' ]]; then
    formatted="#[fg=green,bold]\uf36f#[fg=white,italics,nobold] $dir_color_short#[fg=white,noitalics]"
  elif [[ "$current_command" =~ "zsh|bash" ]]; then
    formatted="#[fg=white,italics]$dir_color_short#[fg=white,noitalics]"
  else
    formatted="#[fg=cyan,bold]$current_command#[fg=white,italics] $dir_color_short#[fg=white,noitalics]"
  fi
else
  formatted="#[fg=magenta,bold]$window_name#[fg=white,nobold]"
fi

tmux set-window-option -t $window_id @my_window_name_formatted "$(printf "$formatted")" # printf for unicode escape
tmux set-window-option -t $window_id @my_window_name "$full_name"
tmux set-window-option -t $window_id @my_window_index "$full_name"
#TODO: implement a more generic (consistent, regardless of nicknames) var meant for fzf and similar column-based queries (called "index" ? )
echo -e "$formatted"
# echo -e "$full_name"

